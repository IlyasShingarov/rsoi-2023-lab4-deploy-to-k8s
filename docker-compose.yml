version: "3"
services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

# TODO добавить сервисы
  gateway:
    image: cr.yandex/crph4v0hbjeg1nj5b98e/gateway
    build: GatewayService/
    ports:
      - "8080:8080"
    depends_on:
      - cars
      - rental
      - payment

  cars:
    image: cr.yandex/crph4v0hbjeg1nj5b98e/cars
    build: CarService/
    ports:
      - "8070:8070"
    environment:
      DB_URL: "jdbc:postgresql://postgres:5432/cars"
      DB_USERNAME: "program"
      DB_PASSWORD: "test"
    depends_on:
      - postgres

  payment:
    image: cr.yandex/crph4v0hbjeg1nj5b98e/payment
    build: PaymentService/
    ports:
      - "8050:8050"
    environment:
      DB_URL: "jdbc:postgresql://postgres:5432/payments"
      DB_USERNAME: "program"
      DB_PASSWORD: "test"
    depends_on:
      - postgres

  rental:
    image: cr.yandex/crph4v0hbjeg1nj5b98e/rental
    build: RentalService/
    ports:
      - "8060:8060"
    environment:
      DB_URL: "jdbc:postgresql://postgres:5432/rentals"
      DB_USERNAME: "program"
      DB_PASSWORD: "test"
    depends_on:
      - postgres

volumes:
  db-data:
